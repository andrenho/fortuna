;---------------------------------------
; LOAD FULL FILE IN MEMORY
;---------------------------------------
;  Max 46 sectors.
;  - HL: cluster number
;  - DE: memory location destination
;  Return A: 0 = success

fat16_load_full_file:
        
        ; do
        ;   sector_counter = 0
        ;   for sector in cluster:
        ;     if sector_counter > 45 then error
        ;     load_sector(DE)
        ;     DE += 512
        ;   next
        ;   if sector_in_fat >= 0xf8 then return
        ;   go to next cluster
        ;   restart
        ; end

        ; TODO calculate correct position of cluster

        ld      b, 0                    ; B = current_sector
        ld      c, 0                    ; C = sector total counter

.next_sector:
        
        ld      a, c                    ; max sector count that fits in memory
        cp      45  
        jr      nc, .file_too_large

        push    bc
        push    hl

        push    de                      
        ld      a, b                    ; load sector into exchange area...
        call    fat16_load_data_cluster
        pop     de

        ld      hl, 0
        ld      bc, 512                 ; ...and copy to memory
        call    memcpy

        pop     hl
        pop     bc

        inc     b                       ; ++current_sector
        inc     c                       ; ++sector_total_counter
        inc     d                       ; DE += 512
        inc     d

        ld      a, (fat16_sectors_per_cluster) ; go to next sector
        cp      b
        jr      z, .sectors_done

        jr      .next_sector

.sectors_done:
        call    fat16_load_cluster_from_fat     ; load FAT cluster 
        inc     hl                              ; if sector_in_fat >= 0xf8 then return success
        call    hl_is_zero
        cp      0
        jr      nz, .next_cluster
        ld      a, 0                            ; return success
        ret

.next_cluster
        dec     hl                              ; go to next cluster in HL
        jr      fat16_load_full_file

.file_too_large:
        ld      hl, .file_too_large_msg
        SYS     _PRINT
        ld      a, 1
        ret

.file_too_large_msg:
        asciiz  "Executable too large.", 13


; vim: ts=8:sts=8:sw=8:expandtab
